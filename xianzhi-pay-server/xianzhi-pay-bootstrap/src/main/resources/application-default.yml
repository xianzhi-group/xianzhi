spring:
  cloud:
    nacos:
      server-addr: 192.168.50.7:8848
      config:
        server-addr: ${spring.cloud.nacos.server-addr}
      username: nacos
      password: nacos
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource # 使用druid连接池
    url: jdbc:mysql://192.168.50.7:3306/xianzhi_pay?characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: root
    password: xianzhi_2024
    #username: 账号                 如果使用springboot2整合druid连接池！使用此信息配置账号、密码！！！！！！！
    #password:                     但是springboot3不支持该配置方式！！！！！！！！！！！！！！！！
    # Druid的其他属性配置
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 1
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
mybatis-plus:
  #配置Mapper映射文件
  mapper-locations: classpath:/mappers/*.xml
  # 配置Mybatis数据返回类型别名（默认别名为类名）
  type-aliases-package: io.xianzhi.pay.dao.mapper
  configuration:
    # 自动驼峰命名
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
dubbo:
  application:
    name: ${spring.application.name}
    register-mode: interface
    serialize-check-status: WARN
    qos-enable: false
  protocol:
    name: dubbo
    port: -1
    serialization: fastjson2
  registry:
    address: nacos://${spring.cloud.nacos.server-addr}
    username: ${spring.cloud.nacos.username}
    password: ${spring.cloud.nacos.password}
    use-as-metadata-center: true
    use-as-config-center: false
    simplified: true
    extra-keys: retries,owner,side
    parameters:
      namespace: "dubbo"
    group: "dubbo"
  scan:
    base-packages: io.xianzhi.pay.facade.impl
  provider:
    timeout: 3000
  consumer:
    check: false
